Errores corregidos.
Recursion a izquierda eliminada.

<start>                 ::= <classdef_start> 
                            <class_start>

<classdef_start>        ::= <classdef> 
<classdef_start>        ::= <classdef> 
                            <classdef_start>

<classdef>              ::= TK_CLASSDEF 
                            TK_IDENTIFIER 
                            <classdef_body>
<classdef>              ::= TK_CLASSDEF 
                            TK_IDENTIFIER 
                            <super> 
                            <classdef_body>

<classdef_body>         ::= TK_BRACE_OPEN
                            <classdef_ctors>
                            <classdef_methods>
                            TK_BRACE_CLOSE

<classdef_ctor>         ::= TK_IDENTIFIER 
                            <formal_args>
                            TK_SEMICOLON

<classdef_method>       ::= <method_type> 
                            <identifier> 
                            <formal_args>
                            TK_SEMICOLON

<class_start>           ::= <class>
<class_start>           ::= <class> 
                            <class_start>    

<class>                 ::= TK_CLASS 
                            TK_IDENTIFIER 
                            <class_body>
<class>                 ::= TK_CLASS 
                            TK_IDENTIFIER 
                            <super> 
                            <class_body>

<class_body>            ::= TK_BRACE_OPEN 
                            <fields> 
                            <ctors> 
                            <methods> 
                            TK_BRACE_CLOSE

<fields>                ::= LAMBDA
<fields>                ::= <field> 
                            <fields>

<ctors>                 ::= LAMBDA
<ctors>                 ::= <ctor> 
                            <ctors>

<methods>               ::= LAMBDA
<methods>               ::= <method> 
                            <methods>

<super>                 ::= TK_EXTENDS 
                            TK_IDENTIFIER

<field>                 ::= <type> 
                            <var_declarator_list> 
                            TK_SEMICOLON

<method>                ::= <method_type> 
                            TK_IDENTIFIER 
                            <formal_args> 
                            <block>

<ctor>                  ::= TK_IDENTIFIER 
                            <formal_args> 
                            <block>

<formal_args>           ::= TK_PAREN_OPEN 
                            TK_PAREN_CLOSE
<formal_args>           ::= TK_PAREN_OPEN 
                            <formal_arg_list> 
                            TK_PAREN_CLOSE

<formal_arg_list>       ::= <formal_arg>
<formal_arg_list>       ::= <formal_arg> 
                            TK_COMMA 
                            <formal_arg_list>

<formal_arg>            ::= <type> 
                            TK_IDENTIFIER

<method_type>           ::= TK_VOID
<method_type>           ::= <type>

<type>                  ::= TK_IDENTIFIER
<type>                  ::= <primitive_type>

<primitive_type>        ::= TK_BOOLEAN
<primitive_type>        ::= TK_CHAR
<primitive_type>        ::= TK_INT
<primitive_type>        ::= TK_STRING

<var_declarator_list>   ::= TK_IDENTIFIER
<var_declarator_list>   ::= TK_IDENTIFIER 
                            TK_COMMA 
                            <var_declarator_list>

<block>                 ::= TK_BRACE_OPEN 
                            <statements> 
                            TK_BRACE_CLOSE

<statements>            ::= <statement>
<statements>            ::= <statement> 
                            <statements>

<statement>             ::= TK_SEMICOLON

<statement>             ::= <expression>

<statement>             ::= TK_IF 
                            TK_PAREN_OPEN 
                            <expression> 
                            TK_PAREN_CLOSE 
                            <statement>

<statement>             ::= TK_IF 
                            TK_PAREN_OPEN 
                            <expression> 
                            TK_PAREN_CLOSE 
                            <statement> 
                            TK_ELSE 
                            <statement>

<statement>             ::= TK_RETURN 
                            TK_SEMICOLON

<statement>             ::= TK_RETURN 
                            <expression> 
                            TK_SEMICOLON

<statement>             ::= <block>

<statement>             ::= TK_FOR 
                            TK_PAREN_OPEN 
                            <expression> 
                            TK_SEMICOLON 
                            <expression> 
                            TK_SEMICOLON
                            <expression> 
                            TK_PAREN_CLOSE 
                            <statement>

<statement>             ::= TK_WHILE 
                            TK_PAREN_OPEN 
                            <expression> 
                            TK_PAREN_CLOSE 
                            <statement>

<expression>            ::= <assignment_expr>

<expression>            ::= <logical_expr>

<assignment_expr>       ::= TK_ASSIGNMENT
                            TK_IDENTIFIER
<assignment_expr>       ::= TK_ASSIGNMENT
                            TK_THIS
                            TK_PERIOD
                            TK_IDENTIFIER

<logical_expr>          ::= <logical_or_expr> 
                            <logical_expr_rest>

<logical_expr_rest>     ::= LAMBDA
<logical_expr_rest>     ::= <logical_expr>

<logical_or_expr>       ::= <logical_and_expr> 
                            <logical_or_expr_rest>

<logical_or_expr_rest>  ::= LAMBDA
<logical_or_expr_rest>  ::= TK_OR <logical_or_expr>

<logical_and_expr>      ::= <equality_expr> 
                            <logical_and_expr_rest>

<logical_and_expr_rest> ::= LAMBDA
<logical_and_expr_rest> ::= TK_AND 
                            <logical_and_expr>

<equality_expr>         ::= <relational_expr> 
                            <equality_expr_rest>

<equality_expr_rest>    ::= LAMBDA
<equality_expr_rest>    ::= TK_EQUALS 
                            <equality_expr>
<equality_expr_rest>    ::= TK_NOTEQUALS 
                            <equality_expr>

<relational_expr>       ::= <term_expr> 
                            <relational_expr_rest>

<relational_expr_rest>  ::= LAMBDA
<relational_expr_rest>  ::= TK_LT 
                            <relational_expr>
<relational_expr_rest>  ::= TK_GT 
                            <relational_expr>
<relational_expr_rest>  ::= TK_LTEQ 
                            <relational_expr>
<relational_expr_rest>  ::= TK_GTEQ 
                            <relational_expr>

<term_expr>             ::= <factor_expr> 
                            <additive_expr_rest>

<additive_expr_rest>    ::= LAMBDA
<additive_expr_rest>    ::= TK_ADD 
                            <term_expr>
<additive_expr_rest>    ::= TK_SUB 
                            <term_expr>

<factor_expr>           ::= <unary_expr> 
                            <multiplicative_expr_rest>

<factor_expr_rest>      ::= LAMBDA
<factor_expr_rest>      ::= TK_MUL 
                            <factor_expr>
<factor_expr_rest>      ::= TK_DIV 
                            <factor_expr>
<factor_expr_rest>      ::= TK_MOD 
                            <factor_expr>

<unary_expr>            ::= TK_ADD 
                            <unary_expr>
<unary_expr>            ::= TK_SUB 
                            <unary_expr>
<unary_expr>            ::= TK_NOT 
                            <unary_expr>
<unary_expr>            ::= <primary>

<primary>               ::= TK_IDENTIFIER
<primary>               ::= <new_expr>

<new_expr>              ::= <literal>
<new_expr>              ::= TK_THIS
<new_expr>              ::= TK_THIS 
                            TK_PERIOD 
                            TK_IDENTIFIER
<new_expr>              ::= TK_PAREN_OPEN 
                            <expression> 
                            TK_PAREN_CLOSE
<new_expr>              ::= TK_NEW 
                            TK_IDENTIFIER 
                            <actual_args>
<new_expr>              ::= TK_IDENTIFIER 
                            <actual_args>
<new_expr>              ::= <primary> 
                            TK_PERIOD 
                            TK_IDENTIFIER 
                            <actual_args>
<new_expr>              ::= TK_SUPER 
                            TK_PERIOD 
                            TK_IDENTIFIER 
                            <actual_args>

<literal>               ::= TK_NULL
<literal>               ::= TK_TRUE
<literal>               ::= TK_FALSE
<literal>               ::= TK_INT_LITERAL
<literal>               ::= TK_CHAR_LITERAL
<literal>               ::= TK_STRING_LITERAL

<actual_args>           ::= TK_PAREN_OPEN 
                            TK_PAREN_CLOSE
<actual_args>           ::= TK_PAREN_OPEN 
                            <expr_list> 
                            TK_PAREN_CLOSE

<expr_list>             ::= <expression>
<expr_list>             ::= <expression> 
                            TK_COMMA 
                            <expr_list>
